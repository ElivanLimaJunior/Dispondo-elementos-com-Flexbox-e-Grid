* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.corpo {
    background-color: #444444;
    padding: 16px;
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    gap: 16px;
}

.cabecalho {
    background-color: #cc2a2a;
    border-radius: 10px;
    min-width: 50px;
    min-height: 50px;
    grid-column: span 4;
}

.lateral {
    background-color: #45cc2a;
    border-radius: 10px;
    min-width: 50px;
    min-height: 50px;
    grid-row: 1 / span 3;
    grid-column: 4;
}

.meio {
    background-color: #2aa6cc;
    border-radius: 10px;
    min-width: 50px;
    min-height: 50px;
    grid-column: span 2;
    grid-row: 1 / span 3;
}

.direita-cima {
    background-color: #352acc;
    border-radius: 10px;
    min-width: 50px;
    min-height: 50px;
    grid-row: 3;
    grid-column: 1;
}

.direita-baixo {
    background-color: #cc2a96;
    border-radius: 10px;
    min-width: 50px;
    min-height: 50px;
    grid-row: 1 / span 2;
    grid-column: 1;
}

/*

Por incrivel que pareceça... eu não sábia que
o "grid-row" poderia ser feito daquela maneira.

usando aquela BARRA / eu posso declarar em que linha ele vai está e quantas linhas ele vai ocupar logo após com o "Span".

Entendi isso na hora de ver o gabarito ou nunca iria resolver.


GRID-ROW: 1 / SPAN 3;
O 1 É A LINHA QUE ELE VAI ESTÁ.
A / É PARA SEPARAR A DECLARAÇÃO.
O SPAN É QUANTAS LINHAS ELE VAI OCUPAR.
NO 3 DIZEMOS A QUANTIDADE DE LINHAS QUE ELE VAI OCUPAR

*/